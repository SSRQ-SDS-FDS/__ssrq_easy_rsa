#!/bin/sh -e
#
# 2020 Marko Seric (marko.seric at ssrq-sds-fds.ch)
# 2020 Dennis Camera (dennis.camera at ssrq-sds-fds.ch)
# 2020 Beni Ruef (bernhard.ruef at ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

base_dir=$(cat "${__object:?}/parameter/dir")

if test -s "${__object:?}/parameter/common-name"
then
	common_name=$(cat "${__object:?}/parameter/common-name")
else
	common_name=${__object_id:?}
fi

state_is=$(cat "${__object:?}/explorer/state")

easyrsa_executable=
os=$(cat "${__global:?}/explorer/os")
case ${os}
in
	(debian|devuan)
		easyrsa_executable='/usr/share/easy-rsa/easyrsa'
		;;
	(*)
		exit 1  # fail, OS whitelist should be in manifest
		;;
esac

# Terminate early if state is "present"
test "${state_is}" != 'present' || exit 0

opt_params=
# loop through mapping file
while read param_name option_name
do
	if test -s "${__object:?}/parameter/${param_name}"
	then
		value=$(head -n 1 "${__object:?}/parameter/${param_name}")
		opt_params="${opt_params} --${option_name}=\"${value}\""
	fi
done <"${__type:?}/files/param_mapping.txt"


# Check validity of the supplied parameters
# shellcheck source=/dev/null
. "${__type:?}/files/check_parameter_validity.sh"

check_parameter_validity_digest

if test -s "${__object:?}/parameter/digest"
then
	supplied_value=$(head -n 1 "${__object:?}/parameter/digest")
	opt_params="${opt_params} --digest=\"${supplied_value}\""
fi

echo "cd ${base_dir}"
echo "${easyrsa_executable} --pki-dir=${base_dir}/pki --vars=${base_dir}/vars --req-cn='${common_name}' ${opt_params} --batch build-ca nopass"
