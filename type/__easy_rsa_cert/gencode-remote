#!/bin/sh -e
#
# 2020 Marko Seric (marko.seric at ssrq-sds-fds.ch)
# 2020 Dennis Camera (dennis.camera at ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

# Set the executable for easy-rsa
easyrsa_executable=
os=$(cat "${__global:?}/explorer/os")
case ${os}
in
	(debian|devuan)
		easyrsa_executable='/usr/share/easy-rsa/easyrsa'
		;;
	(*)
		printf "Your operating system (%s) is currently not supported by this type (%s)\n" "${os}" "${__type##*/}" >&2
		printf "Please contribute an implementation for it if you can.\n" >&2
		exit 1
		;;
esac

# Check validity of the supplied parameters
# shellcheck source=/dev/null
. "${__type:?}/files/check_parameter_validity.sh"

check_parameter_validity_usealgo

## Check required parameters for sanity
supplied_cert_type=$(cat "${__object:?}/parameter/cert-type")
case ${supplied_cert_type}
in
	(server|client)
		;;  # These two are okay
	(*)
		echo 'cert-type should be either "server" or "client".' >&2
		exit 1
		;;
esac

build_subcommand="build-${supplied_cert_type}-full"

optional_parameter_if_present() {
	if test -f "${__object:?}/parameter/$1"
	then
		echo "$(head -n 1 "${__object:?}/parameter/$1")"
	fi
}

# # TODO can this be condensed?
# cert_options=
# ks_=$(optional_parameter_if_present keysize)
# if [ -n "${ks_}" ]; then
#     cert_options=" --keysize=\"${ks_}\""
# fi
#
# ua_=$(optional_parameter_if_present use-algo)
# if [ -n "${ua_}" ]; then
#     cert_options=" --use-algo=\"${ua_}\""
# fi
#
# dy_=$(optional_parameter_if_present cert-expiration-days)
# if [ -n "${dy_}" ]; then
#     cert_options=" --days=\"${dy_}\""
# fi
#

cert_already_present=$(cat "${__object:?}/explorer/cert-presence")
common_name=${__object_id:?}
command_to_execute="${easyrsa_executable} ${cert_options} ${build_subcommand} ${common_name} nopass"

if test "${cert_already_present}" != 'present'
then
	base_dir=$(cat "${__object:?}/parameter/dir")
	echo "cd ${base_dir}"
	echo "${command_to_execute}"
fi
